--
-- PostgreSQL database dump
--

-- Dumped from database version 14.4
-- Dumped by pg_dump version 14.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: add_count(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.add_count() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF (SELECT count(*) FROM booking_count WHERE id_room = NEW.id_room) = 0 THEN
            INSERT INTO booking_count (id_room, day, book_count) VALUES (NEW.id_room, NEW.day, NEW.id_end - NEW.id_start);
        ELSE
            UPDATE booking_count
                SET book_count = book_count + NEW.id_end - NEW.id_start
            WHERE id_room = NEW.id_room
            AND day = NEW.day;
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.add_count() OWNER TO postgres;

--
-- Name: del_book(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.del_book() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        UPDATE booking_count
            SET book_count = book_count - OLD.id_end + OLD.id_start
            WHERE id_room = OLD.id_room
            AND day = OLD.day;
        RETURN OLD;
    END;
$$;


ALTER FUNCTION public.del_book() OWNER TO postgres;

--
-- Name: del_unav(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.del_unav() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
	DELETE FROM unavailable WHERE id_room = OLD.id_room AND day = OLD.day;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.del_unav() OWNER TO postgres;

--
-- Name: set_status(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_status() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.book_count < 36 THEN
            NEW.status = true;
        ELSE NEW.status = false;
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.set_status() OWNER TO postgres;

--
-- Name: booking_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.booking_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.booking_id_seq OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: booking; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.booking (
    id integer DEFAULT nextval('public.booking_id_seq'::regclass) NOT NULL,
    id_emp integer,
    id_room integer,
    day date,
    id_start integer,
    id_end integer
);


ALTER TABLE public.booking OWNER TO postgres;

--
-- Name: booking_count; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.booking_count (
    id integer NOT NULL,
    id_room integer,
    day date,
    book_count integer,
    status boolean DEFAULT false
);


ALTER TABLE public.booking_count OWNER TO postgres;

--
-- Name: booking_count_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.booking_count_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.booking_count_id_seq OWNER TO postgres;

--
-- Name: booking_count_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.booking_count_id_seq OWNED BY public.booking_count.id;


--
-- Name: booking_time; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.booking_time (
    id integer NOT NULL,
    _time time without time zone
);


ALTER TABLE public.booking_time OWNER TO postgres;

--
-- Name: booking_time_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.booking_time_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.booking_time_id_seq OWNER TO postgres;

--
-- Name: booking_time_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.booking_time_id_seq OWNED BY public.booking_time.id;


--
-- Name: employees; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.employees (
    id integer NOT NULL,
    name character varying(250),
    CONSTRAINT employees_name_check CHECK (((name)::text <> ''::text))
);


ALTER TABLE public.employees OWNER TO postgres;

--
-- Name: employees_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.employees_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.employees_id_seq OWNER TO postgres;

--
-- Name: employees_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.employees_id_seq OWNED BY public.employees.id;


--
-- Name: rooms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rooms (
    id integer NOT NULL,
    name character varying(60),
    CONSTRAINT rooms_name_check CHECK (((name)::text <> ''::text))
);


ALTER TABLE public.rooms OWNER TO postgres;

--
-- Name: rooms_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.rooms_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.rooms_id_seq OWNER TO postgres;

--
-- Name: rooms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.rooms_id_seq OWNED BY public.rooms.id;


--
-- Name: unavailable; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.unavailable (
    id integer NOT NULL,
    id_room integer,
    day date
);


ALTER TABLE public.unavailable OWNER TO postgres;

--
-- Name: unavailable_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.unavailable_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.unavailable_id_seq OWNER TO postgres;

--
-- Name: unavailable_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.unavailable_id_seq OWNED BY public.unavailable.id;


--
-- Name: booking_count id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking_count ALTER COLUMN id SET DEFAULT nextval('public.booking_count_id_seq'::regclass);


--
-- Name: booking_time id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking_time ALTER COLUMN id SET DEFAULT nextval('public.booking_time_id_seq'::regclass);


--
-- Name: employees id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employees ALTER COLUMN id SET DEFAULT nextval('public.employees_id_seq'::regclass);


--
-- Name: rooms id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rooms ALTER COLUMN id SET DEFAULT nextval('public.rooms_id_seq'::regclass);


--
-- Name: unavailable id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unavailable ALTER COLUMN id SET DEFAULT nextval('public.unavailable_id_seq'::regclass);


--
-- Data for Name: booking; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.booking (id, id_emp, id_room, day, id_start, id_end) FROM stdin;
5	385011593	1	2022-07-01	1	37
6	385011593	5	2022-07-19	1	27
7	385011593	5	2022-07-19	27	37
\.


--
-- Data for Name: booking_count; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.booking_count (id, id_room, day, book_count, status) FROM stdin;
2	7	2022-07-20	0	t
3	1	2022-07-01	36	f
4	5	2022-07-19	36	f
\.


--
-- Data for Name: booking_time; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.booking_time (id, _time) FROM stdin;
1	09:00:00
2	09:15:00
3	09:30:00
4	09:45:00
5	10:00:00
6	10:15:00
7	10:30:00
8	10:45:00
9	11:00:00
10	11:15:00
11	11:30:00
12	11:45:00
13	12:00:00
14	12:15:00
15	12:30:00
16	12:45:00
17	13:00:00
18	13:15:00
19	13:30:00
20	13:45:00
21	14:00:00
22	14:15:00
23	14:30:00
24	14:45:00
25	15:00:00
26	15:15:00
27	15:30:00
28	15:45:00
29	16:00:00
30	16:15:00
31	16:30:00
32	16:45:00
33	17:00:00
34	17:15:00
35	17:30:00
36	17:45:00
37	18:00:00
\.


--
-- Data for Name: employees; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.employees (id, name) FROM stdin;
385011593	ILYA
449182895	RINAT
\.


--
-- Data for Name: rooms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.rooms (id, name) FROM stdin;
1	508
2	ConfRoom2
3	1002
4	703
5	404
6	Windows
7	603
8	ConfRoom1
9	donRipatLohhness
\.


--
-- Data for Name: unavailable; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.unavailable (id, id_room, day) FROM stdin;
\.


--
-- Name: booking_count_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.booking_count_id_seq', 4, true);


--
-- Name: booking_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.booking_id_seq', 7, true);


--
-- Name: booking_time_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.booking_time_id_seq', 37, true);


--
-- Name: employees_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.employees_id_seq', 1, false);


--
-- Name: rooms_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.rooms_id_seq', 9, true);


--
-- Name: unavailable_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.unavailable_id_seq', 12, true);


--
-- Name: booking_count booking_count_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking_count
    ADD CONSTRAINT booking_count_pkey PRIMARY KEY (id);


--
-- Name: booking booking_id_room_day_id_end_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_id_room_day_id_end_key UNIQUE (id_room, day, id_end);


--
-- Name: booking booking_id_room_day_id_start_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_id_room_day_id_start_key UNIQUE (id_room, day, id_start);


--
-- Name: booking booking_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_pkey PRIMARY KEY (id);


--
-- Name: booking_time booking_time_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking_time
    ADD CONSTRAINT booking_time_pkey PRIMARY KEY (id);


--
-- Name: employees employees_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employees
    ADD CONSTRAINT employees_pkey PRIMARY KEY (id);


--
-- Name: rooms rooms_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rooms
    ADD CONSTRAINT rooms_name_key UNIQUE (name);


--
-- Name: rooms rooms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rooms
    ADD CONSTRAINT rooms_pkey PRIMARY KEY (id);


--
-- Name: unavailable unavailable_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unavailable
    ADD CONSTRAINT unavailable_pkey PRIMARY KEY (id);


--
-- Name: booking add_count; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER add_count BEFORE INSERT ON public.booking FOR EACH ROW EXECUTE FUNCTION public.add_count();


--
-- Name: booking del_book; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER del_book BEFORE DELETE ON public.booking FOR EACH ROW EXECUTE FUNCTION public.del_book();


--
-- Name: booking del_unav; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER del_unav AFTER DELETE ON public.booking FOR EACH ROW EXECUTE FUNCTION public.del_unav();


--
-- Name: booking_count set_status; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER set_status BEFORE INSERT OR UPDATE ON public.booking_count FOR EACH ROW EXECUTE FUNCTION public.set_status();


--
-- Name: booking_count booking_count_id_room_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking_count
    ADD CONSTRAINT booking_count_id_room_fkey FOREIGN KEY (id_room) REFERENCES public.rooms(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: booking booking_id_emp_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_id_emp_fkey FOREIGN KEY (id_emp) REFERENCES public.employees(id) ON UPDATE CASCADE ON DELETE SET DEFAULT;


--
-- Name: booking booking_id_end_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_id_end_fkey FOREIGN KEY (id_end) REFERENCES public.booking_time(id) ON UPDATE SET DEFAULT ON DELETE SET DEFAULT;


--
-- Name: booking booking_id_room_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_id_room_fkey FOREIGN KEY (id_room) REFERENCES public.rooms(id) ON UPDATE CASCADE ON DELETE SET DEFAULT;


--
-- Name: booking booking_id_start_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.booking
    ADD CONSTRAINT booking_id_start_fkey FOREIGN KEY (id_start) REFERENCES public.booking_time(id) ON UPDATE SET DEFAULT ON DELETE SET DEFAULT;


--
-- Name: unavailable unavailable_id_room_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unavailable
    ADD CONSTRAINT unavailable_id_room_fkey FOREIGN KEY (id_room) REFERENCES public.rooms(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

